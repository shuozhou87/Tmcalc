# Change Log - nanoDSF Analysis Application

## [2024-05-28] - Added Gaussian Deconvolution for Overlapping Transitions

### Added
- Gaussian peak deconvolution for automatic detection of overlapping transitions
- Multi-Gaussian curve fitting to the derivative data
- Visualization of individual Gaussian components on the derivative plot
- Area calculation for each deconvolved peak
- Automatic weighting based on peak area for more accurate Tm determination
- Read-only peak information table for deconvolved peaks

### Changed
- Enhanced visualization with different markers for deconvolved peaks
- Modified window length recommendations for deconvolution (25-31 recommended)
- Improved peak detection to work better with overlapping transitions
- Updated UI to provide guidance on when to use deconvolution

### Fixed
- Detection of shoulder peaks around 57°C without requiring manual parameter tuning
- Difficulty in identifying overlapping transitions with similar heights
- Inconsistent detection of transitions with varying window sizes

## [2024-05-27] - Improved Shoulder Peak Detection and Curve Smoothing

### Added
- Cubic interpolation option for smoother curves and better peak detection
- Enhanced shoulder peak detection with more sensitive parameters
- Automatic selection of peaks in the 55-60°C range (typical shoulder region)
- Visual markers for peak positions on the derivative plot
- Improved grid and axis formatting for better visualization

### Changed
- Reduced peak detection thresholds for height (0.05) and prominence (0.05)
- Decreased minimum width requirement for peaks from 2.0 to 1.5
- Lowered SNR threshold for peaks from 1.5 to 1.0
- Reduced minimum peak distance from 5 to 3 points
- Enhanced plot styling with grid lines and better markers

### Fixed
- Missing shoulder peaks around 57°C in complex unfolding patterns
- Rough appearance of derivative curves
- Difficulty in visually identifying exact peak positions

## [2024-05-26] - Major Update to Multi-Peak Detection and Data Processing

### Added
- Adaptive smoothing algorithm that compares noise levels before/after smoothing
- Dedicated shoulder peak detection for identifying closely spaced transitions
- Temperature-based peak classification (Low Tm vs High Tm)
- Helpful UI tips for window size selection in multi-peak detection
- Support for up to 3 additional peaks for complex unfolding patterns
- Type-specific labeling of transitions (peak vs dip) in detail views
- Documentation in README.md about data organization (DOSE/ and SP/ folders)
- Peak position refinement algorithm for large window sizes
- Warnings for excessive window sizes that may affect accuracy
- Proximity-based peak grouping for detecting multiple similar-height peaks
- Enhanced detection of closely spaced peaks with similar prominence
- User-selectable peaks interface with interactive table
- Per-capillary peak selection for customized analysis

### Changed
- Default Savitzky-Golay window size from 21 to 25
- Polynomial order for smoothing from 3 to 2 for more reliable results
- Maximum allowed window size limited to 51 (from 101)
- Multi-peak detection thresholds:
  - Positive peak height threshold from 0.15 to 0.10
  - Positive peak prominence threshold from 0.10 to 0.08
  - Positive peak width minimum from 3 to 2
  - Temperature separation requirement from 3.0°C to 2.0°C
  - Added explicit peak distance parameter (5 points)
- Negative peak (dip) detection parameters:
  - Increased height threshold from 0.15 to 0.20
  - Increased prominence threshold from 0.10 to 0.15
  - Added additional validation for dips (min prominence 20% of max)
- SNR requirements based on peak type (3.0 for dips, 2.0 for peaks)
- Peak selection logic to retain peaks with similar prominence (≥70% of best peak)
- Multi-peak detection approach from algorithmic to user-selectable
- Relaxed filtering for potential peaks to provide more options to users

### Fixed
- Issue where "smoothed" data appeared less smooth than raw data
- Bug where identified transitions weren't always displayed on plots
- Duplicate transition labels in legend
- Multi-peak detection compatibility with Two-state Boltzmann method
- Missing shoulder peaks in complex unfolding patterns
- False positive dips from baseline fluctuations
- Input validation for window length parameters
- Peak position shifts with large window sizes (>30)
- Missing adjacent peaks with similar heights/prominence
- Limitations of algorithmic peak selection with complex data

### Improved
- Peak display and classification in detailed curve views
- Handling of edge cases with very short data arrays
- Robustness of the smoothing algorithm across different datasets
- Visual distinction between different types of transitions
- Prioritization of biologically relevant positive peaks over dips
- Multi-peak detection reliability across different window sizes
- Overall performance on complex ternary systems with multiple transitions
- Accuracy of peak position detection with large window sizes
- Detection of multiple transitions within 7°C of each other
- User control over peak selection and visualization
- Flexibility in handling complex unfolding patterns

### Technical Details
- `analysis/calc/tm_calc.py`: Enhanced peak detection and filtering algorithm, added peak position refinement, added proximity-based peak grouping, modified to return all potential peaks
- `analysis/tm_analysis.py`: Updated to support returning all potential peaks
- `utils/io_utils.py`: Modified to pass return_all_peaks parameter when multi-peak detection is enabled
- `visualization/plots.py`: Improved transition rendering and labeling
- `main.py`: Modified window size handling and transition preparation, added warnings for large window sizes, added interactive peak selection table
- `README.md`: Updated with data organization information

This update significantly improves the application's ability to analyze complex protein melting curves, particularly for ternary systems and samples exhibiting multiple transitions. The new peak refinement algorithm ensures accurate peak position detection even with large smoothing windows. The proximity-based peak grouping algorithm enhances detection of closely spaced peaks with similar heights, which is critical for complex protein unfolding patterns. The user-selectable peaks interface gives researchers complete control over which transitions to analyze, addressing the limitations of purely algorithmic approaches.

## [YYYY-MM-DD] - Version X.Y.Z
### Added
- **Enhanced Single-Point ΔTm Analysis**:
  - Automatic ΔTm calculation for all other samples against a user-selected control.
  - ΔTm results displayed in a table and bar chart.
- **Automatic Experiment Type Detection**:
  - Function to detect experiment type ('dose-response' or 'screening') from filenames (concentration diversity, 'DOSE/' or 'SP/' folder hints).
  - `read_zip_data` updated to return CSV list for efficient type detection.
- **Conditional UI for Analysis Sections**:
  - Main UI now conditionally shows EC50 or ΔTm analysis sections based on detected experiment type.

### Changed
- **ΔTm Screening Logic**:
  - The "Include" checkbox (formerly "Include in EC50") now correctly filters samples for ΔTm calculation and plotting.

### Fixed
- Resolved `ImportError` for `detect_experiment_type` by updating `utils/__init__.py`.
- Corrected `TypeError: 'bool' object is not callable` by changing `df_results.empty()` to `df_results.empty`. 